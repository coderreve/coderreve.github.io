import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{a as s}from"./app.ebc51866.js";var a="/assets/async_await.08c16511.png";const t={},p=s('<h1 id="async-await\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#async-await\u539F\u7406" aria-hidden="true">#</a> async/await\u539F\u7406</h1><p><code>async/await\u8FDB\u9636</code> async/await\u539F\u7406</p><p><img src="'+a+`" alt="async_await" loading="lazy"></p><h1 id="async-await-\u89E3\u51B3\u5F02\u6B65" tabindex="-1"><a class="header-anchor" href="#async-await-\u89E3\u51B3\u5F02\u6B65" aria-hidden="true">#</a> Async , Await \u89E3\u51B3\u5F02\u6B65</h1><h2 id="await\u7684\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#await\u7684\u4F5C\u7528" aria-hidden="true">#</a> await\u7684\u4F5C\u7528</h2><blockquote><ol><li>\u7B49\u5F85\u4E00\u4E2Apromise resolve\u7684\u7ED3\u679C</li><li>\u5982\u679Cawait \u4FEE\u9970\u4E0D\u662Fpromise \u5219\u4F1A\u628A\u5176\u5305\u88C5\u6210promise</li><li>\u5916\u5C42\u51FD\u6570\u5FC5\u987B\u6709async</li></ol></blockquote><p><strong>\u6D4B\u8BD5\u4EE3\u78011</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B49\u5F85\u4E00\u4E2Apromise resolve\u7684\u7ED3\u679C</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asynFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>
     <span class="token comment">//setTimeout(() =&gt; reject(&#39;\u5931\u8D25&#39;), 3000)// reject\u4E0D\u884C</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span> res <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">asynFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6D4B\u8BD5\u4EE3\u78012</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5982\u679Cawait \u4FEE\u9970\u4E0D\u662Fpromise \u5219\u4F1A\u628A\u5176\u5305\u88C5\u6210promise  </span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asynFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token string">&#39;\u4F60\u597D&#39;</span>
    <span class="token comment">// \u7B49\u4EF7\u4E8E </span>
    <span class="token comment">// const res = await Promise.resolve(&#39;\u4F60\u597D&#39;)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span> res <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token function">asynFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-\u5173\u952E\u8BCD" tabindex="-1"><a class="header-anchor" href="#async-\u5173\u952E\u8BCD" aria-hidden="true">#</a> async \u5173\u952E\u8BCD</h2><blockquote><ol><li>async \u5173\u952E\u8BCD\u7528\u4E8E\u4FEE\u9970\u4E00\u4E2A\u5F02\u6B65\u51FD\u6570</li><li>async\u51FD\u6570\u4E00\u5B9A\u8FD4\u56DE\u4E00\u4E2Apromise</li><li>async \u51FD\u6570\u7684\u8FD4\u56DE\u503C, \u4F5C\u4E3Apromise resolve\u7684\u7ED3\u679C</li></ol></blockquote><p><strong>\u6D4B\u8BD5\u4EE3\u78011</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// async\u51FD\u6570\u4E00\u5B9A\u8FD4\u56DE\u4E00\u4E2Apromise</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asynFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">asynFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6D4B\u8BD5\u4EE3\u78012</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// async \u51FD\u6570\u7684\u8FD4\u56DE\u503C, \u4F5C\u4E3Apromise resolve\u7684\u7ED3\u679C</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asynFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token string">&#39;\u6210\u529F&#39;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">asynFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// promise\u4E3Afulfilled\u72B6\u6001, \u4E14result\u4E3A\u6210\u529F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-await\u4E0Egenerator\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#async-await\u4E0Egenerator\u51FD\u6570" aria-hidden="true">#</a> Async Await\u4E0Egenerator\u51FD\u6570</h2><blockquote><p>async \u548C await \u5B9E\u9645\u4E0A\u662Fgenerator\u51FD\u6570\u7684\u8BED\u6CD5\u7CD6</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span>

  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// async \u548C await \u5B9E\u9645\u4E0A\u7B49\u4E8E generator + co\u51FD\u6570</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span>

  <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">co</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8FED\u4EE3\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u534F\u8BAE" aria-hidden="true">#</a> \u8FED\u4EE3\u534F\u8BAE</h2><p>\u6587\u6863\u5730\u5740: https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols</p><p>ECMAScript 2015 \u7684\u4E00\u7EC4\u8865\u5145\u89C4\u8303\uFF0C\u8FED\u4EE3\u534F\u8BAE\u5E76\u4E0D\u662F\u65B0\u7684\u5185\u7F6E\u5B9E\u73B0\u6216\u8BED\u6CD5\uFF0C\u800C\u662F<em>\u534F\u8BAE</em>\u3002\u8FD9\u4E9B\u534F\u8BAE\u53EF\u4EE5\u88AB\u4EFB\u4F55\u9075\u5FAA\u67D0\u4E9B\u7EA6\u5B9A\u7684\u5BF9\u8C61\u6765\u5B9E\u73B0\u3002</p><p>\u7B80\u5355\u7684\u6765\u8BF4</p><p>\u8FED\u4EE3\u5668\u5BF9\u8C61 \u5177\u6709next\u65B9\u6CD5, \u5E76\u4E14next\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5177\u6709done\u548Cvalue\u5C5E\u6027\u7684\u65B0\u5BF9\u8C61</p><p>\u5982</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span>xxx<span class="token punctuation">,</span><span class="token literal-property property">done</span><span class="token operator">:</span>boolean <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="generator\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#generator\u51FD\u6570" aria-hidden="true">#</a> generator\u51FD\u6570</h2><blockquote><p>\u5E0C\u671B\u4E00\u4E2A\u51FD\u6570\u53EF\u4EE5\u6682\u505C\u6267\u884C, \u5E76\u5728\u6682\u505C\u7684\u65F6\u505A\u4E00\u4E9B\u4E8B\u60C5</p></blockquote><p><strong>generator\u51FD\u6570\u7684\u57FA\u672C\u4F7F\u7528</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9047\u5230yield\u6682\u505C\u4EE3\u7801, \u7B49\u5F85next()\u65B9\u6CD5\u7684\u8C03\u7528</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">yield</span> <span class="token number">1</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token keyword">yield</span> <span class="token number">2</span>

  <span class="token keyword">return</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> iterator <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//generator\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u8FED\u4EE3\u5668</span>
<span class="token keyword">const</span> res1 <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span> <span class="token comment">// value\u4E3A\u672C\u6B21yeild\u7684\u8FD4\u56DE\u503C, done\u4E3A\u51FD\u6570\u662F\u5426\u8C03\u7528\u5B8C</span>
<span class="token keyword">const</span> res2 <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>
<span class="token keyword">const</span> res3 <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res3<span class="token punctuation">)</span> <span class="token comment">// done:true, value:3, \u6700\u540E\u4E00\u6B21value\u4E3Areturn\u7684\u8FD4\u56DE\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5411generator\u51FD\u6570\u5185\u90E8\u4F20\u9012\u6570\u636E</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">1</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span>
      <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">2</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token number">3</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> iterator <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F60\u597D&#39;</span><span class="token punctuation">)</span>
    iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="async-await\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#async-await\u5B9E\u73B0" aria-hidden="true">#</a> async await\u5B9E\u73B0</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res1<span class="token punctuation">)</span>

      <span class="token keyword">const</span> res2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res2<span class="token punctuation">)</span>

      <span class="token keyword">return</span> <span class="token string">&#39;\u4F60\u597D&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token function">co</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// async fn()</span>
	
<span class="token comment">// \u7B80\u6613\u7248co\u5E93</span>
    <span class="token keyword">function</span> <span class="token function">co</span><span class="token punctuation">(</span><span class="token parameter">it</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

        <span class="token keyword">function</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span> <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span> <span class="token comment">//\u5982\u679C\u4E0D\u662Fpromise \u5305\u88C5\u6210promise</span>
              <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">step</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token function">step</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34);function e(o,c){return p}var u=n(t,[["render",e],["__file","async-await.html.vue"]]);export{u as default};
